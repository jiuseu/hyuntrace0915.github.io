---
layout: post
title:  "나의 흔적 남기기"
date:   2023-09-15 00:51:32 +0900
categories: jekyll update
---

비전공으로 개발자로 인정받기 위해서는 많은 노력과 그 노력으로 뛰어난 실력이 있어야 한다고 생각하였다. 그래서인지 실력을 키워 `결과`만 내기 위해 달려왔는데 이 한 곳에만 함몰 된 것 같아
깃허브 블로그를 만들어 앞으로 내가 프로젝트나 공부를 하면서 새롭게 습득하거나 어려웠던 점, 오류나 버그를 어떻게 해결되었는지 기록해 나갈 생각이다.
위에 적은 것처럼 `결과`에만 치중하였고 자신은 당연히 어느정도 열심히 달려온 것을 알지만 남들이 `결과`만 보았을 때 이 비전공자가 `결과`를 위해 어떻게 혼자서 하였는지 모른다는 것이다.
여태까지 오류나 버그가 일어나면 따로 작성하여 나만 보았는데 이제는 이 블로그에 작성하여 나의 `흔적`을 남겨 도착지라는 `결과`뿐만 아니라 걸어왔던`과정`까지 남길 것이다.


사실 오늘 공부한 것이나 프로젝트한 과정을 요약해서 올릴까 생각하였는데 `git page`블로그를 만드는데 생각보다 애먹어서 다음에도  `git page`를 만들 때를 대비해서 오늘 간단하게 `git page` 만들었던 과정과 오류가 났던 것을 어떻게 처리하였는지 짧게 정리하고 마치겠다.

- 깃허브에서 빈 "repository"를 생성하고 이름은 대충 `자신이만든이름.github.io`으로 만든다.

- 터미널 / CMD 을 실행하여 자신이 복사하고 싶은 경로로 이동한 다음, 만들었던 repository 깃허브 주소를 `git clone URL "깃허브 주소"`뒤에 입력한다.

- 원하는 경로에 폴더가 생성된 것을 확인한 후 다시 터미널/CMD로 돌아와서 복사한 경로로 이동한다. 그리고 `index.html`파일을 추가한다.
{% highlight ruby %}
echo "My First GitHub Blog" > index.html
{% endhighlight %}

- 만든 `index.html`을 `Commit, Push`하기 위해 터미널/CMD에 다음 명령어를 입력
{% highlight ruby %}
git add --all
git commit -m "적고 싶은 커밋 메세지"
git push -u origin main
{% endhighlight %}

- 이후 `자신이만든이름.github.io`주소를 입력하면 정상적으로 블로그로 연결이 된다.




- 본격적으로 깃허브 블로그 테마를 쓰기 위해 `jekyll`를 설치해야 하는데 먼저 `Ruby`를 설치해야 한다.



- `Ruby`를 설치 후 `Jekyll`을 다음 명령어를 입력해 설치를 진행한다.

{% highlight ruby %}
gem install jekyll bundler
{% endhighlight %}


- 이제 `Jekyll`를 생성하기 위해 설치 경로에 있던 `index.html`를 지운 뒤에 다음 명령어를 입력한다.
{% highlight ruby %}
jekyll new ./
{% endhighlight %}
   
-> 첫번째 시도에는 `Conflict: 에러`가 발생하여 `jekyll new 내가짓고싶은이름`으로 하였더니 깃허브 폴더에 `내가 짓고 싶은 이름`폴더가 생성되었고
   후에 `Jekyll`로컬 서버를 작동 후 `localhost:4000`에서 블로그를 보았을 때 아예 연결이 되지 않았다.

-> 해결:그래서 `Conflict: 에러`가 발생하였을 때 뒤에 `-f`를 붙여 입력하였을 때 정상적으로 `Jekyll`가 생성되었다.
{% highlight ruby %}
jekyll new ./ -f
{% endhighlight %}


- 이후 다음 명령어를 입력해서 `Bundle`을 설치해줍니다.
{% highlight ruby %}
bundle install
{% endhighlight %}

- 이후 다음 명령어를 입력해서 `jekyll`` 서버 동작을 한다
{% highlight ruby %}
bundle exec jekyll serve
{% endhighlight %}
->  오류가 발생하였을 때는 뒤에 `--trace`를 추가해서 입력을 해보자
{% highlight ruby %}
bundle exec jekyll serve --trace
{% endhighlight %}

- 정상적으로 실행이 되었다면 `http://localhost:4000`로 로컬로 접속하여 블로그 확인


- 마지막으로 `git`에 `push` 하기 위해 다음 명령어들을 입력한다.
{% highlight ruby %}
git add .
git commit -m "자신이 입력하고 싶은 커밋메세지"
git push
{% endhighlight %}


- 본인이 설정했던 블로그 URL을 다시 입력해보면 로컬에서 확인했던 블로그가 똑같이 뜬다.


-> 이후에 로컬로 다시 확인하기 위해 `jekyll`를 구동시켰는데 `_config.yml`파일의 특정 라인이 에러를 발생시키고 있었다.


->해결: `_config.yml`의 특정라인은 `url` 설정부분 이었는데 원래는 `자신이만든이름.github.io`가 있었는데 어느순간 지워져 공백이었다.
        그래서 다시 `자신이만든이름.github.io`를 입력하고 저장시켜 다시 `jekyll`를 구동시킨 결과 정상적으로 되었고 물론 `_config.yml`파일이
         `url` 설정부분이 공백인 상태로 `push`되었기에 다시 `commit`를 하고 `push`를 하였다.

[jekyll-docs]: https://jekyllrb.com/docs/home
[jekyll-gh]:   https://github.com/jekyll/jekyll
[jekyll-talk]: https://talk.jekyllrb.com/
